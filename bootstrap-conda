#!/usr/bin/env bash

########################################################################
# Generate auto-generated conda environment files
#########################################################################

export PATH="$(pwd)/build/bin:$PATH"

STRIP_COMMENTS="sed s/#.*//;"

shopt -s extglob

DEVELOP_SPKG_PATTERN="@(_develop$(for a in $(head -n 1 build/pkgs/_develop/dependencies); do echo -n "|"$a; done))"
BOOTSTRAP_PACKAGES=$(echo $(${STRIP_COMMENTS} build/pkgs/_bootstrap/distros/conda.txt))
SYSTEM_PACKAGES=
OPTIONAL_SYSTEM_PACKAGES=
SAGELIB_SYSTEM_PACKAGES=
SAGELIB_OPTIONAL_SYSTEM_PACKAGES=
DEVELOP_SYSTEM_PACKAGES=
for PKG_BASE in $(sage-package list --has-file distros/conda.txt --exclude _sagemath); do
    PKG_SCRIPTS=build/pkgs/$PKG_BASE
    SYSTEM_PACKAGES_FILE=$PKG_SCRIPTS/distros/conda.txt
    PKG_TYPE=$(cat $PKG_SCRIPTS/type)
    PKG_SYSTEM_PACKAGES=$(echo $(${STRIP_COMMENTS} $SYSTEM_PACKAGES_FILE))
    if [ -n "PKG_SYSTEM_PACKAGES" ]; then
        if [ -f $PKG_SCRIPTS/spkg-configure.m4 ]; then
            case "$PKG_BASE:$PKG_TYPE" in
                *:standard)
                    SYSTEM_PACKAGES+=" $PKG_SYSTEM_PACKAGES"
                    ;;
                $DEVELOP_SPKG_PATTERN:*)
                    DEVELOP_SYSTEM_PACKAGES+=" $PKG_SYSTEM_PACKAGES"
                    ;;
                *)
                    OPTIONAL_SYSTEM_PACKAGES+=" $PKG_SYSTEM_PACKAGES"
                    ;;
            esac
        else
            case "$PKG_BASE:$PKG_TYPE" in
                *:standard)
                    SAGELIB_SYSTEM_PACKAGES+=" $PKG_SYSTEM_PACKAGES"
                    ;;
                $DEVELOP_SPKG_PATTERN:*)
                    DEVELOP_SYSTEM_PACKAGES+=" $PKG_SYSTEM_PACKAGES"
                    ;;
                *)
                    SAGELIB_OPTIONAL_SYSTEM_PACKAGES+=" $PKG_SYSTEM_PACKAGES"
                    ;;
            esac
        fi
    fi
done
echo >&2 $0:$LINENO: generate conda environment files
for python_version in 3.9 3.10 3.11; do
    (
        echo "name: sage-build"
        echo "channels:"
        echo "  - conda-forge"
        echo "  - nodefaults"
        echo "dependencies:"
        echo "  - python=$python_version"
        for pkg in $SYSTEM_PACKAGES; do
            echo "  - $pkg"
        done
        echo "  # Packages needed for ./bootstrap"
        for pkg in $BOOTSTRAP_PACKAGES; do
            echo "  - $pkg"
        done
    ) > environment-$python_version.yml
    (
        sed 's/name: sage-build/name: sage/' environment-$python_version.yml
        echo "  # Additional packages providing all dependencies for the Sage library"
        for pkg in $SAGELIB_SYSTEM_PACKAGES; do
            echo "  - $pkg"
        done
    ) > src/environment-$python_version.yml

    (
        cat environment-$python_version.yml
        echo "  # optional packages"
        for pkg in $OPTIONAL_SYSTEM_PACKAGES; do
            echo "  - $pkg"
        done
    ) > environment-optional-$python_version.yml

    (
        (
            sed 's/name: sage/name: sage-dev/' src/environment-$python_version.yml
            echo "  # Additional dev tools"
            for pkg in $DEVELOP_SYSTEM_PACKAGES; do
                echo "  - $pkg"
            done
        ) >&4
        (
            cat src/environment-$python_version.yml
            echo "  # optional packages"
            for pkg in $OPTIONAL_SYSTEM_PACKAGES $SAGELIB_OPTIONAL_SYSTEM_PACKAGES; do
                echo "  - $pkg"
            done
        ) >&5
        echo >&4 "  - pip:"
        echo >&5 "  - pip:"
        echo >&6 "  - pip:"
        for PKG_BASE in $((sage-package list :standard: :optional: --has-file requirements.txt --no-file distros/conda.txt --no-file src; sage-package list :standard: :optional: --has-file install-requires.txt --no-file requirements.txt --no-file distros/conda.txt --no-file src) | sort); do
            PKG_SCRIPTS=build/pkgs/$PKG_BASE
            SYSTEM_PACKAGES_FILE=$PKG_SCRIPTS/requirements.txt
            if [ ! -f $SYSTEM_PACKAGES_FILE ]; then
                SYSTEM_PACKAGES_FILE=$PKG_SCRIPTS/install-requires.txt
            fi
            PKG_TYPE=$(cat $PKG_SCRIPTS/type)
            if grep -q SAGERUNTIME $PKG_SCRIPTS/dependencies $PKG_SCRIPTS/dependencies_order_only 2>/dev/null; then
                : # cannot install packages that depend on the Sage library
            else
                case "$PKG_BASE:$PKG_TYPE" in
                    $DEVELOP_SPKG_PATTERN:*) FD=4;;
                    *:standard)              FD="4 5 6";;
                    *)                       FD=5;;
                esac
                ${STRIP_COMMENTS} $SYSTEM_PACKAGES_FILE | while read -r line; do
                    [ -n "$line" ] && for fd in $FD; do echo >&$fd "    - $line"; done
                done
            fi
        done
    ) 4>> src/environment-dev-$python_version.yml 5>> src/environment-optional-$python_version.yml 6>> src/environment-$python_version.yml
done
